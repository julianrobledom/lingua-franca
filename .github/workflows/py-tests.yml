name: Python tests

on:
  workflow_call:
    inputs:
      compiler-ref:
        required: false
        type: string
      reactor-c-ref:
        required: false
        type: string
      reactor-c-py-ref:
        required: false
        type: string

jobs:
  run:
    continue-on-error: true
    strategy:
      matrix:
        platform: [ubuntu-18.04, ubuntu-latest, ubuntu-22.04, macos-10.15, macos-11, macos-12]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out lingua-franca repository
        uses: actions/checkout@v3
        with:
          repository: lf-lang/lingua-franca
          submodules: true
          ref: ${{ inputs.compiler-ref }}
          fetch-depth: 0
      - name: Prepare build environment
        uses: ./.github/actions/prepare-build-env
      - name: Setup Python
        uses: actions/setup-python@v2
      - name: Install dependencies OS X
        run: |
          brew install coreutils
        if: ${{ runner.os == 'macOS' }}
      - name: Install LinguaFrancaBase
        run: pip3 install LinguaFrancaBase
      - name: Install Google API Python Client
        run: pip3 install --upgrade google-api-python-client
      - name: Check out specific ref of reactor-c
        uses: actions/checkout@v2
        with:
          repository: lf-lang/reactor-c
          path: org.lflang/src/lib/c/reactor-c
          ref: ${{ inputs.reactor-c-ref }}
        if: ${{ inputs.reactor-c-ref }}
      - name: Check out specific ref of reactor-c-py
        uses: actions/checkout@v2
        with:
          repository: lf-lang/reactor-c-py
          path: org.lflang/src/lib/py/reactor-c-py
          ref: ${{ inputs.reactor-c-py-ref }}
        if: ${{ inputs.reactor-c-py-ref }}
      - name: Build RTI docker image
        uses: ./.github/actions/build-rti-docker
        if: ${{ runner.os == 'Linux' }}
      - name: Run a Python test in a weird way to see if anything different happens
        continue-on-error: true
        run: |
          ulimit -c unlimited
          bin/build-lfc -c
          bin/lfc test/Python/src/Minimal.lf
          export ASAN_OPTIONS=verbosity=1
          export DYLD_INSERT_LIBRARIES=/Library/Developer/CommandLineTools/usr/lib/clang/13.0.0/lib/darwin/libclang_rt.asan_osx_dynamic.dylib
          git clone https://github.com/python/cpython.git
          cd cpython
          ./configure --prefix=/Users/runner/work/lingua-franca --without-pymalloc --with-pydebug
          make
          sudo make install
          echo "Running Minimal.py"
          /Users/runner/work/lingua-franca/bin/python3 /Users/runner/work/lingua-franca/lingua-franca/test/Python/src-gen/Minimal/Minimal.py
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
      - name: Run Python tests
        run: |
          ./gradlew test --tests org.lflang.tests.runtime.PythonTest.*
      - name: Report to CodeCov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: org.lflang.tests/build/reports/xml/jacoco
          fail_ci_if_error: false
          verbose: true
        if: ${{ !inputs.compiler-ref }}  # i.e., if this is part of the main repo's CI
